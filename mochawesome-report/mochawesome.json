{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-13T18:57:17.293Z",
    "end": "2023-02-13T18:57:17.321Z",
    "duration": 28,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4784720d-4fa2-45b4-a4d4-a1f6654ba263",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
          "title": "factorialShort",
          "fullFile": "F:\\Automated-Testing-Foundations-with-JS\\test\\specs\\factorialShort.spec.js",
          "file": "\\test\\specs\\factorialShort.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"factorialShort\"",
              "fullTitle": "factorialShort \"before each\" hook in \"factorialShort\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = new Factorial();\nspy = chai.spy.on(factorial, 'factorialShort');",
              "err": {},
              "uuid": "1a5efccf-29c5-47b1-9e7b-7383157bac62",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"factorialShort\"",
              "fullTitle": "factorialShort \"after each\" hook in \"factorialShort\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = null;",
              "err": {},
              "uuid": "c2101c0a-0c29-4734-be8d-d75e0f5833a9",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 6 when called with number 3",
              "fullTitle": "factorialShort should return 6 when called with number 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(3)).to.be.equal(6);",
              "err": {},
              "uuid": "0565addd-945b-4e49-84d7-66a72d27f3c9",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 362880 when called with number 9",
              "fullTitle": "factorialShort should return 362880 when called with number 9",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(9)).to.be.equal(362880);",
              "err": {},
              "uuid": "1fde59ee-0b7f-4807-8f90-ad210c0344fe",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if provided with a negative number",
              "fullTitle": "factorialShort should throw an error if provided with a negative number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let callWithError = () => factorial.factorialShort(-1);\nexpect(spy).to.be.a.spy;\nexpect(callWithError).to.throw(`Negative number!`);",
              "err": {},
              "uuid": "2500edd8-5729-4c44-b9d8-3ae2b4897d39",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be called twice when provided with 2",
              "fullTitle": "factorialShort should be called twice when provided with 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial.factorialShort(2);\nexpect(spy).to.have.been.called(2);",
              "err": {},
              "uuid": "80a709cc-2553-46bb-97cb-97d6dbb67631",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when provided 1",
              "fullTitle": "factorialShort should return 1 when provided 1",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialShort(1)).to.be.equal(1);",
              "err": {},
              "uuid": "adbef9c5-e4da-4244-88d3-37b31314fac6",
              "parentUUID": "d8d56fd4-4b07-4d21-95a0-8f12b07f8d73",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0565addd-945b-4e49-84d7-66a72d27f3c9",
            "1fde59ee-0b7f-4807-8f90-ad210c0344fe",
            "2500edd8-5729-4c44-b9d8-3ae2b4897d39",
            "80a709cc-2553-46bb-97cb-97d6dbb67631",
            "adbef9c5-e4da-4244-88d3-37b31314fac6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
          "title": "factorialSimple",
          "fullFile": "F:\\Automated-Testing-Foundations-with-JS\\test\\specs\\factorialSimple.spec.js",
          "file": "\\test\\specs\\factorialSimple.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"factorialSimple\"",
              "fullTitle": "factorialSimple \"before each\" hook in \"factorialSimple\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = new Factorial();\nspy = chai.spy.on(factorial, 'factorialSimple');",
              "err": {},
              "uuid": "a8a9d306-a2ea-4a94-9213-4113d622ad69",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"factorialSimple\"",
              "fullTitle": "factorialSimple \"after each\" hook in \"factorialSimple\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial = null;",
              "err": {},
              "uuid": "6752ea0b-83c2-4b94-956f-cb804548c849",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 6 when called with number 3",
              "fullTitle": "factorialSimple should return 6 when called with number 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(3)).to.be.equal(6);",
              "err": {},
              "uuid": "b64191ce-1a81-49a2-b33c-db1db1bc09c6",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 362880 when called with number 9",
              "fullTitle": "factorialSimple should return 362880 when called with number 9",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(9)).to.be.equal(362880);",
              "err": {},
              "uuid": "789d44e9-c111-44b8-8d40-39ea3556c58e",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if provided with a negative number",
              "fullTitle": "factorialSimple should throw an error if provided with a negative number",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let callWithError = () => factorial.factorialSimple(-1);\nexpect(spy).to.be.a.spy;\nexpect(callWithError).to.throw(`Negative number!`);",
              "err": {},
              "uuid": "645f6994-7495-4d5e-9dc1-ef09afdce7bf",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be called twice when provided with 2",
              "fullTitle": "factorialSimple should be called twice when provided with 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "factorial.factorialSimple(2);\nexpect(spy).to.have.been.called(1);",
              "err": {},
              "uuid": "d5b18ef3-dac7-4936-ae07-a0a53f893695",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when provided 1",
              "fullTitle": "factorialSimple should return 1 when provided 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(factorial.factorialSimple(1)).to.be.equal(1);",
              "err": {},
              "uuid": "0c1c738e-fe56-4df0-8740-7f9c6c35b665",
              "parentUUID": "d84dc41d-7c0e-483e-8d06-978c7ef3f04d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b64191ce-1a81-49a2-b33c-db1db1bc09c6",
            "789d44e9-c111-44b8-8d40-39ea3556c58e",
            "645f6994-7495-4d5e-9dc1-ef09afdce7bf",
            "d5b18ef3-dac7-4936-ae07-a0a53f893695",
            "0c1c738e-fe56-4df0-8740-7f9c6c35b665"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": null,
      "version": "6.1.1"
    }
  }
}